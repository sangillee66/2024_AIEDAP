{
  "hash": "c11db3a13b8f70e02dd6dd713320857d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: |\n  | [Day 2]{style=\"color:coral;font-size:1em\"} \n  | [데이터 수집 및 정련화]{style=\"font-size:1.2em\"}\nauthor: 이상일(서울대학교 지리교육과 교수)\ndate: 2024-08-06\nformat: \n  revealjs:\n    logo: aiedap_logo.png\n    footer: \"사회과 예비교사를 위한 AIㆍ디지털 역량강화 워크숍\"\n    transition: fade\n    transition-speed: fast\n    margin: 0.05\n    smaller: false\n    scrollable: false\n    code-link: true\n    code-overflow: scroll\n    slide-number: true\n    pointer:\n      pointerSize: 20\n      color: red\n    menu: true\n    embed-resources: false\n    theme: [default, custom.scss]\n    revealjs-plugins:\n      - pointer\ncode-link: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto  \ndpi: 300\neditor: visual\n# suppress-bibliography: true\n---\n\n\n## 데이터사이언스 과정의 첫 번째와 두 번째 단계\n\n![[https://r4ds.hadley.nz](https://r4ds.hadley.nz/intro){.uri style=\"font-size:0.75rem\"}[/](https://r4ds.hadley.nz/intro){.uri style=\"font-size:0.75rem\"}[intro](https://r4ds.hadley.nz/intro){.uri}](images/clipboard-4075247197.png){fig-align=\"center\"}\n\n## 내용\n\n-   데이터 수집하기\n\n    -   웹스크레이핑(webscraping)\n\n    -   오픈 API의 활용\n\n-   데이터 불러오기\n\n-   데이터 정돈하기\n\n# [데이터 수집하기: 웹스크레이핑]{style=\"color:coral\"}\n\n## 정의\n\n-   웹페이지로부터 데이터를 추출하는 것, 데이터 긁어 오기\n-   데이터 크롤링(crawling)과 유사, 박박 기면서 수집하기\n-   해킹(hacking)과의 경계가 모호\n    -   허가 없이 정보 시스템에 침투하는 행위(데이터를 취득하는 행위)\n-   최근들어 점점 회피하는 추세\n\n## HTML의 정의\n\n-   HyperText Markup Language, 하이퍼텍스터 마크업 언어\n\n    -   웹 브라우저를 통해 표출되는 사항(무엇이 어떻게)을 프로그래밍하는 마크업(markup) 언어\n\n        -   마크업 언어: 다큐먼트의 구조와 포맷을 관장하는 텍스트-엔코딩 시스템으로 HTML과 XML이 대표적\n\n-   마크다운(markdown) 언어\n\n    -   사용자의 편이성이 강화된 마크업 언어\n\n    -   예: Quarto\n\n## HTML의 기초 1\n\n::: r-fit-text\n-   웹페이지는 다양한 태그(tag)로 구성\n\n    -   각 태그는 시작 태그와 종료 태그로 구성되며, 둘 사이에 해당 콘텐츠가 위치\n\n    -   태그로 규정되는 개별 단위: 엘리먼트(element)\n\n-   태그의 종류는 다양하며, 크게 세 가지로 구분\n\n    -   최상위인 html 태그\n\n    -   웹페이지의 전반적인 구조를 결정하는 블록(block) 태그\n\n        -   예: h1, section, p, ol 태그 등\n\n    -   블록 태그 내부의 특정 부분에만 적용되는 인라인(inline) 태그\n\n        -   예: b, i, a 태그 등\n:::\n\n## HTML의 기초 2\n\n-   태그들은 복잡한 다단계 구조를 이룸\n\n-   태그는 속성(attribute)를 가질 수 있음\n\n    -   특별히 중요한 속성: 클래스(class), 아이디(id)\n\n    -   p나 div 태그와 같은 블록 태그: height, width, margin, padding\n\n    -   img 태그: src, alt, width, height\n\n    -   a 태그: href\n\n## \n\n![[https://odinuv.cz/articles/html/](https://odinuv.cz/articles/html/){.uri style=\"font-size:0.75rem\"}](images/clipboard-613748476.png){fig-align=\"center\"}\n\n## HTML 엘리먼트의 선택\n\n::: r-fit-text\n-   HTML 엘리먼트\n\n    -   태그와 속성으로 구성된 HTML의 한 단위 혹은 특정 부분\n\n    -   웹스크레이핑의 타깃의 주소\n\n-   HTML 엘리먼트의 선택: CSS(casading style sheet) 선택자(selector)\n\n| 선택 대상              | CSS 선택자     | 결과                                                                                      |\n|--------------|--------------|--------------------------------------------|\n| 태그(tag)              | tag1           | \"tag1\"이라는 이름의 모든 tag                                                              |\n| 클래스(class)          | .class1        | \"class1\"이라는 class 속성을 갖는 모든 요소                                                |\n| 아이디(id)             | #id1           | \"id1\"이라는 id 속성을 갖는 모든 요소                                                      |\n| tag와 class의 결합     | tag1.class1    | \"tag1\"이라는 tag의 \"class1\"이라는 class 속성을 갖는 모든 요소                             |\n| class1과 class2의 결합 | .class1.class2 | \"class1\"이라는 이름의 class 속성과 \"class2\"라는 이름의 class 속성을 동시에 갖는 모든 요소 |\n:::\n\n## HTML 엘리먼트의 선택 {.unscrollable}\n\n-   정확한 선택자의 확인\n\n    -   웹페이지에서 오른쪽 마우스 버튼을 눌러 \"검사\" 선택한 뒤, 탐색\n\n    -   브라우저 확장 프로그램의 활용: [SelectGadget](https://chromewebstore.google.com/detail/selectorgadget/mhjhnkcfbdhnjickkkdbjoemdmbfginb?pli=1)\n\n## `rvest` 패키지\n\n![[https://rvest.tidyverse.org/](https://rvest.tidyverse.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-1209836452.png){fig-align=\"center\"}\n\n## 단계\n\n-   1단계: 웹페이지 읽기\n\n    -   웹스크레이핑의 대상이 되는 웹페이지의 URL 읽기\n\n-   2단계: HTML 엘리먼트의 선택\n\n    -   필요한 정보를 포함하고 있는 엘리먼트의 특정\n\n-   3단계: 하위 엘리먼트의 선택\n\n    -   필요한 정보를 포함하고 있는 하위 엘리먼트의 특정\n\n-   4단계: 엘리먼트로부터 데이터를 추출\n\n    -   데이블 데이터, 텍스트 등을 추출\n\n## 사례\n\n[vignette(\"starwars\")](https://rvest.tidyverse.org/articles/starwars.html)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n<section>\n  <h2 data-id=\"1\">The Phantom Menace</h2>\n  <p>Released: 1999-05-19</p>\n  <p>Director: <span class=\"director\">George Lucas</span></p>\n  \n  <div class=\"crawl\">\n    <p>...</p>\n    <p>...</p>\n    <p>...</p>\n  </div>\n</section>\n```\n:::\n\n\n## 사례\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rvest)\nurl <- \"https://rvest.tidyverse.org/articles/starwars.html\"\nread_html(url) |> \n  html_elements(\"section\") |> \n  html_element(\"h2\") |> \n  html_text2()\n```\n:::\n\n\n## Result\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The Phantom Menace\"      \"Attack of the Clones\"   \n[3] \"Revenge of the Sith\"     \"A New Hope\"             \n[5] \"The Empire Strikes Back\" \"Return of the Jedi\"     \n[7] \"The Force Awakens\"      \n```\n\n\n:::\n:::\n\n:::\n\n## 사례\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsection <- read_html(url) |> \n  html_elements(\"section\")\ntibble(\n  title = section |> \n    html_element(\"h2\") |> \n    html_text2(),\n  released = section |> \n    html_element(\"p\") |> \n    html_text2() |> \n    str_remove(\"Released: \") |> \n    parse_date(),\n  director = section |> \n    html_element(\".director\") |> \n    html_text2(),\n  intro = section |> \n    html_element(\".crawl\") |> \n    html_text2()\n)\n```\n:::\n\n\n## Result\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n  title                   released   director         intro                     \n  <chr>                   <date>     <chr>            <chr>                     \n1 The Phantom Menace      1999-05-19 George Lucas     \"Turmoil has engulfed the…\n2 Attack of the Clones    2002-05-16 George Lucas     \"There is unrest in the G…\n3 Revenge of the Sith     2005-05-19 George Lucas     \"War! The Republic is cru…\n4 A New Hope              1977-05-25 George Lucas     \"It is a period of civil …\n5 The Empire Strikes Back 1980-05-17 Irvin Kershner   \"It is a dark time for th…\n6 Return of the Jedi      1983-05-25 Richard Marquand \"Luke Skywalker has retur…\n7 The Force Awakens       2015-12-11 J. J. Abrams     \"Luke Skywalker has vanis…\n```\n\n\n:::\n:::\n\n:::\n\n# [데이터 수집하기: API의 활용]{style=\"color:coral\"}\n\n## 정의 {.smaller}\n\n-   API(application programming interface)는 일종의 통신 규칙으로, 허가 받은 사용자가 데이터 원천에 접근하여 데이터를 수집\n\n    -   복수의 프로그램들이 서로 상호작용하는 방법을 정의하는 일련의 규칙\n\n    -   한 애플리케이션이 다른 애플리케이션의 기능들을 불러 사용할 수 있게 해주는 통로\n\n-   데이터를 보유하고 있는 공적 기관이 데이터의 사용 권한을 사용자들에게 부여함으로써 데이터에 대한 접근성을 높여주는 일련의 방식\n\n    -   오픈 API, API 키\n\n## API 활용의 다양성 {.smaller}\n\n-   테이블 데이터의 수집\n\n    -   [KOSIS의 API](https://kosis.kr/openapi/)를 활용한 센서스 데이터 수집\n\n    -   [공공데이터포털 API](https://www.data.go.kr/ugs/selectPublicDataUseGuideView.do)를 활용한 지역별 미세먼지 농도 데이터 수집\n\n    -   [International Database(IDB)의 API](https://www.census.gov/data/developers/data-sets/international-database.html)를 활용한 세계 인구 데이터 수집\n\n-   정형 텍스트 데이터 수집\n\n    -   [공공데이터포털 API](https://www.data.go.kr/ugs/selectPublicDataUseGuideView.do)를 활용한 학위 논문 수집\n\n-   비정형 텍스트 데이터 수집: 텍스트 마이닝(text mining)으로 연결\n\n    -   [네이버 검색 API](https://developers.naver.com/)를 활용한 뉴스 데이터 수집\n\n    -   [유튜브 API](https://console.cloud.google.com/apis/)를 활용한 댓글 데이터 수집\n\n## API 활용의 다양성 {.smaller}\n\n-   Google Maps Platform (<https://mapsplatform.google.com/>)\n\n-   7 종류의 API\n\n    -   Google Direction API\n\n    -   Google Distance API\n\n    -   Google Elevation API\n\n    -   Google Timezone API\n\n    -   Google Geocode API\n\n    -   Google Reverse Geocode API\n\n    -   Google Places API\n\n-   R 래퍼 패키지: [googleway](https://github.com/SymbolixAU/googleway)\n\n## NAVER 뉴스 데이터 {.smaller}\n\n-   NAVER Developer(<https://developers.naver.com/>)\n\n-   오픈 API 신청 절차\n\n    -   비로그인 방식 오픈 API: ’검색’ 카테고리(뉴스, 백과사전, 블로그 등)\n\n    -   '개발 가이드 보기'\n\n        -   ClientID와 CLient Secret 개념\n\n        -   요청 URL: https://openapi.naver.com/v1/search/news.json\n\n        -   파라미터: query, display, start, sort\n\n    -   '오픈 API 신청'\n\n        -   애플리케이션 이름: 아무 이름이나 입력\n\n        -   사용 API: '검색'이 선택된 상태를 유지\n\n        -   비로그인 오픈 API 서비스 환경: 'WEB 설정'을 선택\n\n        -   웹 서비스 URL(최대 10개): 'http://localhost'를 입력\n\n## `httr2` 패키지\n\n![[https://httr2.r-lib.org/](https://httr2.r-lib.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-2579380411.png){fig-align=\"center\"}\n\n## '지방소멸' 뉴스 검색 데이터 수집 {.smaller}\n\n\n::: {.cell}\n\n:::\n\n\n::: panel-tabset\n## 코드\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr2)\nsearch <- \"지방소멸\"\nbase_url <- \"https://openapi.naver.com/v1/search/news.json\"\nresult_naver <- request(base_url) |> \n  req_headers(\n    \"X-Naver-Client-ID\" = your_ClientID,\n    \"X-Naver-Client-Secret\" = your_Client_Secret\n  ) |> \n  req_url_query(\n    query = search,\n    display = 100,\n    start = 1,\n    sort = \"date\"\n  ) |> \n  req_perform() |> \n  resp_body_json() \nnaver_tb <- tibble(naver = result_naver$items)\nnaver_res <- naver_tb |> \n  unnest_wider(naver)\nnaver_res |> slice_head(n = 10)\n```\n:::\n\n\n## 결과\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   title                                  originallink link  description pubDate\n   <chr>                                  <chr>        <chr> <chr>       <chr>  \n 1 남원시, 귀농･귀촌･귀향 유입 총력…지…   http://news… http… \"한 해 평…  Mon, 0…\n 2 &quot;사천·진주 통합하면 면적 1천㎢…   https://www… http… \"미래위는 … Mon, 0…\n 3 농업 구조적 한계상황 극복 위해 규모화… https://www… http… \"최근 농촌… Mon, 0…\n 4 창녕군, 교육발전특구 시범지역 2차 공…  https://www… http… \"이번에 지… Mon, 0…\n 5 &quot;매년 1000여 명 유입&quot;...남…  https://www… http… \"남원시가 … Mon, 0…\n 6 권영진, 지자체가 자주재원 확충하고 지… http://www.… http… \"이 때문에… Mon, 0…\n 7 권영진 의원 &quot;<b>지방</b>교부세율… https://www… http… \"권 의원은… Mon, 0…\n 8 남원시, 귀농·귀촌·귀향 유입 총력...…   https://www… http… \"<b>지방소… Mon, 0…\n 9 구미시, 국제우호도시 박닌시 방문 '우…  https://www… http… \"이어 박닌… Mon, 0…\n10 단양 군립 보건의료원, 7월 한 달간 1만… http://news… http… \"특히 응급… Mon, 0…\n```\n\n\n:::\n:::\n\n:::\n\n## KOSIS\n\n::: r-fit-text\n-   KOSIS 공유서비스 홈페이지(<https://kosis.kr/openapi/>)\n\n    -   상세한 [개발 가이드](https://kosis.kr/openapi/devGuide/devGuide_0101List.do)\n\n-   래퍼(wrapper) 패키지\n\n    -   `kosis` 패키지(<https://cran.r-project.org/web/packages/kosis/>)\n\n    -   주석훈(Seokhoon Joo)\n\n-   함수\n\n    -   `getStatData()`\n\n    -   `getStatDataFromURL()`\n:::\n\n## 생성형 AI\n\n-   OpenAI, Google Generative AI, Moonshot AI 등 다양한 생성형 AI와 API를 통한 상호작용 가능\n\n    -   예: GenAI(<https://genai.gd.edu.kg/>)\n\n![[https://genai.gd.edu.kg/](https://genai.gd.edu.kg/){style=\"font-size:0.75rem\"}](GenAI.gif)\n\n# [데이터 불러오기]{style=\"color:coral\"}\n\n## `readr` 패키지\n\n![[https://readr.tidyverse.org/](https://readr.tidyverse.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-1251213286.png){fig-align=\"center\"}\n\n## `readr` 패키지 {.smaller}\n\n| Names          | Formats                                    |\n|----------------|--------------------------------------------|\n| `read_csv()`   | 콤마분리(comma-separated values, CSV) 형식 |\n| `read_csv2()`  | 세미콜론분리(semicolon-separated) 형식     |\n| `read_tsv()`   | 탭구분(tab-limited) 형식                   |\n| `read_delim()` | 여타의 구분 형식                           |\n| `read_fwf()`   | 고정폭(fixed-width) 형식                   |\n| `read_table()` | 공백구분 형식                              |\n| `read_log()`   | 아파치 형식(Apache-style)의 로그 파일      |\n\n## 관련 패키지 {.smaller}\n\n::: {layout=\"[30,30, 30]\" layout-valign=\"center\"}\n![[https://readxl.tidyverse.org/](https://readxl.tidyverse.org/){style=\"font-size:0.75rem\"}](images/clipboard-2419843589.png)\n\n![[https://ycphs.github.io/openxlsx/](https://ycphs.github.io/openxlsx/){style=\"font-size:0.75rem\"}](images/clipboard-2386206028.png)\n\n![[https://googlesheets4.tidyverse.org/](https://googlesheets4.tidyverse.org/){style=\"font-size:0.75rem\"}](images/clipboard-812069546.png)\n:::\n\n-   [`readxl`](https://readxl.tidyverse.org/) 패키지: `read_xls(), read_xlsx(), read_excel()`\n\n## 웹데이터 불러오기: `readr` 패키지\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nread_csv(\"https://pos.it/r4ds-students-csv\")\n```\n:::\n\n\n## Result\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         <dbl> <chr>            <chr>              <chr>               <chr>\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          <NA> \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n```\n\n\n:::\n:::\n\n:::\n\n## 웹데이터 불러오기: `openxlsx` 패키지\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nread.xlsx(\"https://github.com/awalker89/openxlsx/raw/master/inst/readTest.xlsx\")\n```\n:::\n\n\n## Result\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n    Var1 Var2   Var3 Var4  Var5         Var6 Var7\n1   TRUE    1   1.00    a 42042 3209324 This   NA\n2   TRUE   NA     NA    b 42041         <NA>   NA\n3   TRUE    2   1.34    c 42040         <NA>   NA\n4  FALSE    2     NA <NA>    NA         <NA>   NA\n5  FALSE    3   1.56    e    NA         <NA>   NA\n6  FALSE    1   1.70    f 42037         <NA>   NA\n7     NA   NA     NA <NA> 42036         <NA>   NA\n8  FALSE    2  23.00    h 42035         <NA>   NA\n9  FALSE    3  67.30    i 42034         <NA>   NA\n10    NA    1 123.00 <NA> 42033         <NA>   NA\n```\n\n\n:::\n:::\n\n:::\n\n## 웹데이터 불러오기: `googlesheet4` 패키지\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(googlesheets4)\ngs4_deauth()\nread_sheet(\"https://docs.google.com/spreadsheets/d/1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY/edit#gid=780868077\")\n```\n:::\n\n\n## Result\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 624 × 6\n   country continent  year lifeExp      pop gdpPercap\n   <chr>   <chr>     <dbl>   <dbl>    <dbl>     <dbl>\n 1 Algeria Africa     1952    43.1  9279525     2449.\n 2 Algeria Africa     1957    45.7 10270856     3014.\n 3 Algeria Africa     1962    48.3 11000948     2551.\n 4 Algeria Africa     1967    51.4 12760499     3247.\n 5 Algeria Africa     1972    54.5 14760787     4183.\n 6 Algeria Africa     1977    58.0 17152804     4910.\n 7 Algeria Africa     1982    61.4 20033753     5745.\n 8 Algeria Africa     1987    65.8 23254956     5681.\n 9 Algeria Africa     1992    67.7 26298373     5023.\n10 Algeria Africa     1997    69.2 29072015     4797.\n# ℹ 614 more rows\n```\n\n\n:::\n:::\n\n:::\n\n# [데이터 정리하기]{style=\"color:coral\"}\n\n## 테이블 데이터: 데이터 프레임\n\n|              | 변수 1 | 변수 2 | 변수 3 | ... | 변수 *K* |\n|--------------|--------|--------|--------|-----|----------|\n| 관측개체 1   |        |        |        |     |          |\n| 관측개체 2   |        |        |        |     |          |\n| 관측개체 3   |        |        |        |     |          |\n| 관측개체 4   |        |        |        |     |          |\n| ...          |        |        |        |     |          |\n| 관측개체 *n* |        |        |        |     |          |\n\n## tibble 패키지\n\n![[https://tibble.tidyverse.org/](https://tibble.tidyverse.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-3459494907.png){fig-align=\"center\"}\n\n## tibble 객체 vs. data.frame 객체\n\n-   tibble 객체: `tidyverse`의 공식적 데이터 프레임 객체\n\n-   data.frame 객체: Base R의 공식적 데이터 프레임 객체\n\n![](images/clipboard-2404269740.png){fig-align=\"center\" width=\"720\"}\n\n## `tidyr` package\n\n![[https://tidyr.tidyverse.org/](https://tidyr.tidyverse.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-1046439731.png){fig-align=\"center\"}\n\n## 타이디(tidy) 데이터의 개념\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:0.75rem\"}](images/clipboard-4067066416.png)\n\n## 타이디(tidy) 데이터의 개념\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:0.75rem\"}](images/clipboard-3412852372.png)\n\n## 타이디(tidy) 데이터의 개념\n\n-   개별 변수(variable)는 열(column) 하나를 차지한다. 즉, 개별 열에는 하나의 변수가 위치한다.\n\n-   개별 관측개체(observation)는 하나의 행(row)을 차지한다. 즉, 개별 행에는 하나의 관측개체가 위치한다.\n\n-   개별 값(value)은 하나의 셀(cell)을 차지한다. 즉, 개별 셀에는 하나의 값이 위치한다.\n\n## 예시: table1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntable1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n\n\n:::\n:::\n\n\n## 예시: table2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   country      year type            count\n   <chr>       <dbl> <chr>           <dbl>\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n```\n\n\n:::\n:::\n\n\n## 예시: table3\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  country      year rate             \n  <chr>       <dbl> <chr>            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n```\n\n\n:::\n:::\n\n\n## 타이디(tidy) 데이터의 장점\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:0.75rem\"}](images/clipboard-3106963859.png){style=\"font-size:0.75rem\"}\n\n## 타이디(tidy) 데이터로 전환하는 핵심 기법\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:0.75rem\"}](images/clipboard-1179593338.png){style=\"font-size:0.75rem\" fig-align=\"center\"}\n\n## 넓은 형식 [wide form]{style=\"font-size:2.5rem;color:gray\"} vs. 긴 형식 [long form]{style=\"font-size:2.5rem;color:gray\"}\n\n![](images/clipboard-2491549849.png){fig-align=\"center\"}\n\n## 데이터 늘이기 [Lengthening data]{style=\"font-size:2.5rem;color:gray\"}\n\n::: panel-tabset\n## table4a\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable4a\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  country     `1999` `2000`\n  <chr>        <dbl>  <dbl>\n1 Afghanistan    745   2666\n2 Brazil       37737  80488\n3 China       212258 213766\n```\n\n\n:::\n:::\n\n\n## Result\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable4a |> \n  pivot_longer(\n    cols = c(`1999`, `2000`),\n    names_to = \"year\", \n    values_to = \"cases\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  country     year   cases\n  <chr>       <chr>  <dbl>\n1 Afghanistan 1999     745\n2 Afghanistan 2000    2666\n3 Brazil      1999   37737\n4 Brazil      2000   80488\n5 China       1999  212258\n6 China       2000  213766\n```\n\n\n:::\n:::\n\n:::\n\n## 데이터 늘이기 [Lengthening data]{style=\"font-size:2.5rem;color:gray\"}\n\n![](images/clipboard-2601245679.png)\n\n## 데이터 넓히기 [Widening data]{style=\"font-size:2.5rem;color:gray\"}\n\n::: panel-tabset\n## table2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   country      year type            count\n   <chr>       <dbl> <chr>           <dbl>\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n```\n\n\n:::\n:::\n\n\n## Result\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2 |> \n  pivot_wider(\n    id_cols = c(country, year),\n    names_from = type, \n    values_from = count\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n\n\n:::\n:::\n\n:::\n\n## 데이터 넓히기 [Widening data]{style=\"font-size:2.5rem;color:gray\"}\n\n![](images/clipboard-3400622461.png)\n\n## 데이터 결합하기: `dplyr` 패키지\n\n![[https://dplyr.tidyverse.org/](https://dplyr.tidyverse.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-3059639685.png){fig-align=\"center\"}\n\n## 조인의 개념 {.smaller}\n\n-   두 개의 데이터 프레임을 공통키(common key)를 활용하여 하나의 데이터 프레임으로 결합(join)하는 과정\n\n    -   공통키: 두 개의 데이터 프레임에 공통적으로 포함되어 있는 식별자(identifier)\n\n-   대응행(match row)과 비대응행(non-match row)\n\n    -   대응행: 동일한 공통키 값을 가진 두 데이터 프레임의 행\n\n    -   비대응행: 한 데이터 프레임에만 존재하는 공통키 값을 가진 행\n\n-   조인의 결과\n\n    -   열(변수)이 늘어나므로 데이터는 넓어짐\n\n    -   행은 조인의 방식에 따라 변화가 없을 수도 있고, 짧아질수도 있고, 길어질 수도 있음\n\n## 조인의 유형\n\n::: r-fit-text\n-   inner_join(): 대응행만으로 결합\n\n-   full_join(): 대응행과 비대응행 모두를 결합\n\n-   [left_join()]{style=\"color:coral\"}: 첫 번째 변수는 그대로 둔 상태에서 두 번째 변수의 대응행만 결합\n\n-   right_join(): 두 번째 변수는 그대로 둔 상태에서 첫 번째 변수의 대응행만 결합\n\n-   semi_join(): 두 번째 변수에 대응행이 존재하는 첫 번째 변수의 행만 취함\n\n-   anti_join(): 두 번째 변수에 대응행이 존재하지 않는 첫 번째 변수의 행만 취함\n:::\n\n## 조인의 유형\n\n![[https://statisticsglobe.com/r-dplyr-join-inner-left-right-full-semi-anti](https://statisticsglobe.com/r-dplyr-join-inner-left-right-full-semi-anti){.uri style=\"font-size:0.75rem\"}](https://statisticsglobe.com/wp-content/uploads/2019/04/dplyr-data-join-functions-overview_inner_join-left_join-right_join-full_join-semi_join-anti_join.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}