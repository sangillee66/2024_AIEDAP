{
  "hash": "2ccab8587ea2a04ab0b0c603c170579f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: |\n  | [Day 3]{style=\"color:coral;font-size:1em\"} \n  | [탐색적 데이터 분석]{style=\"font-size:1.2em\"}\nauthor: 이상일(서울대학교 지리교육과 교수)\ndate: 2024-08-07\nformat: \n  revealjs:\n    logo: aiedap_logo.png\n    footer: \"사회과 예비교사를 위한 AIㆍ디지털 역량강화 워크숍\"\n    transition: fade\n    transition-speed: fast\n    margin: 0.05\n    # smaller: false\n    # scrollable: false\n    code-link: true\n    code-overflow: scroll\n    slide-number: true\n    pointer:\n      pointerSize: 20\n      color: red\n    menu: true\n    embed-resources: false\n    theme: [default, custom.scss]\n    revealjs-plugins:\n      - pointer\ncode-link: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto  \ndpi: 300\neditor: visual\n# suppress-bibliography: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n## 데이터사이언스 과정의 심장\n\n![[https://r4ds.hadley.nz/intro](https://r4ds.hadley.nz/intro){.uri style=\"font-size:0.75rem\"}](images/clipboard-4075247197.png){fig-align=\"center\"}\n\n## 탐색적 데이터 분석: 개념 {.smaller}\n\n-   탐색적 데이터 분석은 데이터와의 끝임없는 상호작용을 통해 의미있는 결과물을 얻어내는 과정을 의미한다. 데이터사이언스가 데이터로부터 이해, 지식, 통찰력을 획득하는 과정이라고 했을 때, 탐색적 데이터 분석은 [데이터사이언스의 심장]{style=\"color:coral\"}이라 해도 과언이 아니다. 상호작용은 데이터와의 질의응답의 연쇄과정을 의미한다. 의미있는 질문에 답을 얻기 위해서는 거의 반드시 데이터를 변형하거나 시각화해야만 한다.\n\n-   데이터 변형과 데이터 시각화는 개별적으로 탐색적 데이터 분석에 기여한다. 데이터 변형은 데이터를 다른 각도로 바라볼 수 있게 해주고 다양한 요약 통계값을 산출해 준다. 데이터 시각화는 데이터에 차원을 부가함으로써 시각화 되지 않았다면 발견할 수 없었던 것을 발견할 수 있게 해준다.\n\n## 탐색적 데이터 분석: 개념 {.smaller}\n\n-   [데이터 변형에서 데이터 시각화로 이어지는 시퀀스]{style=\"color:coral\"}가 탐색적 데이터 분석의 핵심적인 방법론이다. 데이터 변형의 궁극적인 목적은 바로 데이터 시각화를 위한 준비이다. 특정한 형태의 시각화를 위해서는 특정한 형태의 데이터가 필수적이고, 그것이 이해, 지식, 통찰력의 획득으로 나아가게 해주는 주된 경로이다.\n\n-   데이터 [시각화]{style=\"color:coral\"}의 두 가지 목적은 [탐색]{style=\"color:coral\"}과 [커뮤니케이션]{style=\"color:coral\"}이다. 우리가 데이터 시각화를 하는 첫번째 목적은 데이터에 대한 질문에 답을 찾기 위해서이다. 우리가 데이터를 시각화하는 두 번째 목적은 우리가 발견한 것을 다른 사람들과 ‘잘’ 커뮤니케이션하기 위해서이다.\n\n## 탐색적 데이터 분석: 절차 {.smaller}\n\n-   질문에 답할 수 있는 그래픽(플롯, 지도 등)을 구상한다.\n\n-   구상한 그래픽에 부합하도록 데이터를 변형한다.\n\n-   변형한 데이터를 구상한 그래픽으로 시각화한다.\n\n-   그래픽으로부터 질문의 답을 구하고, 더 나아가 지식, 이해, 통찰을 이끌어 낸다.\n\n## 탐색적 데이터 분석: 예시 {.smaller}\n\n> 대륙별 최대국(인구가 가장 많은 나라)이 소속 대륙 전체에서 차지하는 비중이 어느 정도이고 대륙별로 어느 정도의 차이가 있는지, 그리고 대륙별 최대국의 비중이 시간이 지남에 따라 어떠한 변화 양상을 보여주고 있고, 그러한 양상에 대륙별 차이가 있는지의 여부\n\n::: panel-tabset\n## Data\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n\n\n\n## Graph\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture_3_files/figure-html/unnamed-chunk-2-1.png){width=528}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  group_by(year, continent) |> \n  mutate(\n    sum_cont = sum(pop),\n    country_prop = pop * 100 / sum_cont\n  ) |> \n  slice_max(country_prop) |> \n  ggplot() +\n  geom_line(aes(x = year, y = country_prop, color = continent), linewidth = 1) +\n  labs(x = \"Year\", y = \"% of Population\", color = \"Continents\") \n```\n:::\n\n\n:::\n\n# [데이터 변형하기]{style=\"color:coral\"}\n\n## `dplyr` 패키지\n\n![[https://dplyr.tidyverse.org/](https://dplyr.tidyverse.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-3059639685.png){fig-align=\"center\"}\n\n## `dplyr` 기초\n\n-   첫 번째 아규먼트는 항상 [데이터 프레임]{style=\"color:coral\"}이다.\n\n-   그 다음 아규먼트(들)는 데이터 변형에 결부되는 [변수]{style=\"color:coral\"}(들)를 지정한다 .\n\n-   산출물은 항상 [데이터 프레임]{style=\"color:coral\"}이다.\n\n## `dplyr` 함수의 유형\n\n-   행(rows) 함수: 행에 적용되는 함수, 즉 행의 변화를 야기하는 함수\n\n-   열(columns) 함수: 열에 적용되는 함수, 즉 열의 변화를 야기하는 함수\n\n-   그룹(groups) 함수: 그룹에 적용되는 함수\n\n-   테이블(tables) 함수: 테이블 전체에 적용되는 함수\n\n## \n\n![](images/clipboard-2728894062.png){fig-align=\"center\"}\n\n## 행 함수: 네 개의 주요 함수\n\n-   `filter()`: 특정 변수(들)에 의거한 조건을 만족하는 행(들)을 추출\n\n-   `arrange()`: 특정 변수(들)에 의거해 행(들)의 순서를 변경\n\n-   `distinct()`: 특정 변수(들)에 의거해 (중복을 제거한) 고유한 행(들)을 추출\n\n-   `slice()`: `filter()` 함수처럼 특정 행(들)을 추출\n\n    -   특정 변수와 관계 없이, 행의 위치에 의거해 특정 행(들)을 추출\n\n    -   특정 변수에 따른, 행의 위치에 의거해 행(들)을 추출\n\n## 행 함수 1: `filter()`\n\n![](images/clipboard-565233092.png)\n\n## 행 함수 1: `filter()`\n\n![[https://allisonhorst.com/r-packages-functions](https://allisonhorst.com/r-packages-functions){style=\"font-size:0.75rem\"}](images/clipboard-2723506167.png)\n\n## 행 함수 1: `filter()`\n\n![](images/clipboard-409657186.png){fig-align=\"center\"}\n\n## 행 함수 2: `arrange()`\n\n![](images/clipboard-3074305878.png)\n\n## 행 함수 2: `arrange()`\n\n![](images/clipboard-1840428146.png){fig-align=\"center\"}\n\n## 행 함수 3: `distinct()`\n\n![](images/clipboard-3425030843.png)\n\n## 행 함수 3: `distinct()`\n\n![](images/clipboard-370656711.png){fig-align=\"center\"}\n\n## 행 함수 4: `slice()`\n\n![](images/clipboard-1830339037.png)\n\n## 행 함수 4: `slice()`\n\n![](images/clipboard-1031657585.png){fig-align=\"center\"}\n\n## 열 함수: 네 개의 주요 함수\n\n-   `select()`: 변수(들) 중 일부를 추출\n\n-   `mutate()`: 변수(들)를 변형해 새로운 변수를 생성\n\n-   `rename()`: 변수(들)의 이름을 변경\n\n-   `relocate()`: 변수(들)의 위치(순서)를 변경\n\n## 열 함수 1: `select()`\n\n![](images/clipboard-3651470406.png)\n\n## 열 함수 1: `select()`\n\n![](images/clipboard-2864021695.png){fig-align=\"center\"}\n\n## 열 함수 2: `mutate()`\n\n![](images/clipboard-1943055285.png)\n\n## \n\n![[https://allisonhorst.com/r-packages-functions](https://allisonhorst.com/r-packages-functions){style=\"font-size:0.75rem\"}](images/clipboard-417835741.png){fig-align=\"center\"}\n\n## 열 함수 3: `rename()`\n\n![](images/clipboard-654990545.png)\n\n## \n\n![[https://allisonhorst.com/r-packages-functions](https://allisonhorst.com/r-packages-functions){style=\"font-size:0.75rem\"}](images/clipboard-3953189394.png){fig-align=\"center\"}\n\n## 열 함수 3: `rename()`\n\n![](images/clipboard-3019777280.png){fig-align=\"center\"}\n\n## 열 함수 4: `relocate()`\n\n![](images/clipboard-1813959402.png)\n\n## \n\n![[https://allisonhorst.com/r-packages-functions](https://allisonhorst.com/r-packages-functions){style=\"font-size:0.75rem\"}](images/clipboard-2066290782.png){fig-align=\"center\"}\n\n## 그룹 함수: 네 개의 주요 함수\n\n-   `group_by()`: 변수(들)에 의거해 전체 행(들)을 그룹으로 분할\n\n-   `summarize()`: 그룹별로 변수(들)의 통계량을 산출하여 새로운 변수(들)로 저장\n\n-   `count()`: 그룹별로 해당 관측개체의 빈도수를 계산\n\n-   `across()`: 그룹별로 여러 변수에 걸쳐 동일한 통계량을 산출하고 새로운 변수들로 저장\n\n## 그룹 함수 1: `group_by()`\n\n![](images/clipboard-1542658472.png)\n\n## 그룹 함수 1: `group_by()`\n\n![](images/clipboard-1927744566.png){fig-align=\"center\"}\n\n## 그룹 함수 2: `summarize()`\n\n![](images/clipboard-1592063625.png)\n\n## 그룹 함수 1 + 2: `group_by()` + `summarize()`\n\n![](images/clipboard-1318711495.png)\n\n## 그룹 함수 1 + 2: `group_by()` + `summarize()`\n\n![](images/clipboard-293917068.png){fig-align=\"center\"}\n\n## 그룹 함수 3: `count()`\n\n![](images/clipboard-2066641215.png)\n\n## 그룹 함수 3: `count()`\n\n![](images/clipboard-171754169.png){fig-align=\"center\"}\n\n## 그룹 함수 4: `across()`\n\n![](images/clipboard-2112397168.png)\n\n## \n\n![[https://allisonhorst.com/r-packages-functions](https://allisonhorst.com/r-packages-functions){style=\"font-size:0.75rem\"}](images/clipboard-2406373084.png){fig-align=\"center\"}\n\n## 파이프 연산자와 `dplyr` 함수\n\n![[https://info5940.infosci.cornell.edu/slides/pipes-and-functions-in-r/#9](https://info5940.infosci.cornell.edu/slides/pipes-and-functions-in-r/#9){style=\"font-size:0.75rem\"}](images/clipboard-230122071.gif){fig-align=\"center\"}\n\n## 파이프 연산자와 `dplyr` 함수\n\n![[https://www.rforecology.com/post/how-to-use-pipes/](https://www.rforecology.com/post/how-to-use-pipes/){style=\"font-size:0.75rem\"}](images/clipboard-174079750.png){fig-align=\"center\"}\n\n# [데이터 시각화하기]{style=\"color:coral\"}\n\n## `ggplot2` 패키지\n\n![[https://ggplot2.tidyverse.org/](https://ggplot2.tidyverse.org/){.uri style=\"font-size:0.75rem\"}](images/clipboard-3146270133.png){fig-align=\"center\"}\n\n## Grammar of graphics\n\n![](images/clipboard-3968277018.png){fig-align=\"center\"}\n\n## `ggplot2`의 8대 구성 요소\n\n![[https://initiation.doana-r.com/06-ggplot2#1](https://initiation.doana-r.com/06-ggplot2#1){.uri style=\"font-size:0.75rem\"}](https://sangillee.snu.ac.kr/data_science/images/clipboard-3014854163.png){fig-align=\"center\"}\n\n## 심미성과 기하\n\n-   심미성(aesthetics) 혹은 심미성 매핑(aesthetic mapping)\n\n    -   그래프의 외견을 규정\n\n    -   시각 변수 혹은 속성: color, size, shape 등\n\n-   기하(geometries) 혹은 기하 객체(geometric objects)\n\n    -   그래프의 전체 구조 혹은 형식을 규정\n\n    -   그래프의 유형: bar chart, line chart 등\n\n## 심미성과 기하\n\n::: panel-tabset\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  filter(year == 2007) |> \n  ggplot(aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(aes(color = continent)) +\n  geom_smooth(color = \"black\")\n```\n:::\n\n\n\n## Result\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture_3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## 심미성과 기하 {.smaller}\n\n::: columns\n::: column\n-   x-axis, y-axis\n\n-   color, fill\n\n-   shape\n\n-   size\n\n-   alpha\n\n-   position\n:::\n\n::: column\n-   `geom_point()`\n\n-   `geom_line()`\n\n-   `geom_bar(), geom_col()`\n\n-   `geom_histogram(), geom_density()`\n\n-   `geom_smooth()`\n\n-   `geom_boxplot(), geom_violin()`\n\n-   `geom_text(), geom_label()`\n:::\n:::\n\n## 스케일 scale {.smaller}\n\n-   심미성의 구체적 구현\n\n-   x-axis, y-axis\n\n    -   `scale_x_continuous()`, `scale_x_discrete()`\n\n-   color와 fill\n\n    -   `scale_color_brewer()`, `scale_fill_brewer()`\n    -   `scale_color_manual()`, `scale_fill_manual()`\n\n-   others\n\n    -   `scale_shape()`, `scale_size()`\n\n    -   `scale_linetype()`, `scale_linewidth()`\n\n## 패싯 facet\n\n-   다면생성(faceting) 과정을 통해, 하나의 플롯을 여러 개의 하위 플롯으로 분할\n\n-   두 가지 중요 함수\n\n    -   `facet_wrap()`\n\n    -   `facet_grid()`\n\n## 패싯 facet\n\n::: panel-tabset\n## Normal\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture_3_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Faceting\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture_3_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## 통계적 변환 Statistical transformation\n\n![[https://r4ds.hadley.nz/layers](https://r4ds.hadley.nz/layers){.uri style=\"font-size:0.75rem\"}](images/clipboard-3826441672.png){fig-align=\"center\"}\n\n## 좌표 Coordinates\n\n-   그래픽 요소들의 위치 결정에 기준이 되는 준거 체계\n\n-   두 가지 중요 함수\n\n    -   `coord_flip()`\n\n    -   `coord_fixed()`\n\n## 테마 Theme\n\n-   그래프의 전체적인 외양(테마)를 수정\n\n    -   8개 테마 제공\n\n-   그래프의 세부 구성 요소를 수정\n\n    -   `theme()`\n\n## 테마 Theme\n\n![[https://r4ds.hadley.nz/communication](https://r4ds.hadley.nz/communication){.uri style=\"font-size:0.75rem\"}](images/clipboard-57653269.png){fig-align=\"center\"}\n\n## 테마 Theme\n\n-   수 많은 옵션 <https://ggplot2.tidyverse.org/reference/theme.html>\n\n    -   axis 관련\n\n    -   legend 관련\n\n    -   plot.title 관련\n\n## ggplot2 익스텐션 Extensions\n\n<https://exts.ggplot2.tidyverse.org/>\n\n-   [`patchwork`](https://patchwork.data-imaginist.com/)\n\n-   [`gganimate`](https://gganimate.com/)\n\n-   [`ggrepel`](https://github.com/slowkow/ggrepel)\n\n-   [`ggiraph`](https://github.com/davidgohel/ggiraph)\n\n-   [`ggplotly`](https://plotly.com/ggplot2/)\n\n-   [`GGally`](https://ggobi.github.io/ggally/)\n\n-   [`ggcorrplot`](https://rpkgs.datanovia.com/ggcorrplot/)\n\n## `patchwork`\n\n![[https://allisonhorst.com/r-packages-functions](https://allisonhorst.com/r-packages-functions){.uri style=\"font-size:0.75rem\"}](images/clipboard-2622112002.png){fig-align=\"center\"}\n",
    "supporting": [
      "lecture_3_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}